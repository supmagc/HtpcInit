#!/bin/bash

PATH_BASE="$(dirname $0)/../"
source $PATH_BASE/common/paths
source $PATH_BASE/common/functions

PID=$(get_pid_from_file "$PATH_STEAM_PID")

function steam_wait {
  WAIT=0
  while ! steam_window_is_open 1 && [ $WAIT -lt 60 ]; do
    echo "Waiting for steam to open up"
    sleep 1s
    WAIT=$(($WAIT+1))
  done

  if ! steam_window_is_open 1; then
    echo "Steam still not found, closing"
    steam_close
  fi
}

function steam_start {
  echo "Starting steam"
  steam -bigpicture &
  PID=$!
  echo "$PID">"$PATH_STEAM_PID"
}

function steam_resume {
  echo "Resuming steam"
  steam steam://open/bigpicture &

  steam_wait
}

function steam_close {
  killall -s 9 -q steam.sh
  killall -s 9 -q steam
  killall -s 9 -q steamwebhelper
}

function steam_is_running {
  is_pid_valid_for_name "$PID" "steam"
}

function steam_window_is_open {
  local STRICT=$1
  local WINDOW_NAME
  WINDOW_NAME=$(xdotool getactivewindow getwindowname)
  if [ $? -ne 0 ]; then
    echo "No active window found"
    return 1
  elif [ "$WINDOW_NAME" = "Kodi" ]; then
    echo "Active window is Kodi"
    return 2
  elif [ $STRICT -eq 0 ]; then
    echo "Active window found, no strict check required"
    return 0
  elif [ "$WINDOW_NAME" = "Steam" ] || [ "$WINDOW_NAME" = "[Streaming]" ]; then
    echo "Active window found belonging to Steam"
    return 0
  else
    echo "Active window found, not belonging to Steam although strict checking is required"
    return 1
  fi
}

# See if the active window is fullscreen, this check should follow a steam_has_open_window
function steam_is_active_fullscreen {
  WINDOW=$(echo $(xwininfo -id $(xdotool getactivewindow) -stats | \
                  egrep '(Width|Height):' | \
                  awk '{print $NF}') | \
           sed -e 's/ /x/')
  SCREEN=$(xdpyinfo | grep -m1 dimensions | awk '{print $2}')
  if [[ "$WINDOW" = "$SCREEN" ]]; then
    return 0
  else
    return 1
  fi
}

case "$1" in

  open)
    $PATH_KODI_CONTROL close
    echo "Opening Steam"
    if steam_is_running; then
      steam_resume
    else
      steam_start
    fi

    NO_WINDOW_WAIT=10
    while steam_is_running; do
      echo "Steam is running, and the script is waiting"

      steam_window_is_open 0
      WINDOW_RETURN=$?
      if [ $WINDOW_RETURN -eq 1 ]; then
        NO_WINDOW_WAIT=$(($NO_WINDOW_WAIT-1))
        echo "No active window, wait for $NO_WINDOW_WAIT seconds"
        if [ $NO_WINDOW_WAIT -eq 0 ]; then
          echo "Steam still active, but no window active, resume Steam"
          steam_resume
        fi
      else
        NO_WINDOW_WAIT=10
        if [ $WINDOW_RETURN -eq 2 ]; then
          echo "Active window is Kodi, trying to close and reopen Steam"
          $PATH_KODI_CONTROL close
          steam_resume
        fi
      fi

      sleep 1s
    done

    echo "Steam closed"
    steam_close
    $PATH_KODI_CONTROL open
    ;;

  close)
    echo "Closing Steam"
    steam_close
    ;;

esac